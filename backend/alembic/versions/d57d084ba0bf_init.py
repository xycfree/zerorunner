"""init

Revision ID: d57d084ba0bf
Revises: 
Create Date: 2023-07-24 16:12:42.162889

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'd57d084ba0bf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ui_case',
    sa.Column('name', sa.String(length=255), nullable=False, comment='用例名'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='自动化标记'),
    sa.Column('project_id', sa.Integer(), nullable=True, comment='项目id'),
    sa.Column('module_id', sa.Integer(), nullable=True, comment='模块id'),
    sa.Column('steps', sa.JSON(), nullable=True, comment='运行步骤'),
    sa.Column('setup_hooks', sa.JSON(), nullable=True, comment='前置操作'),
    sa.Column('teardown_hooks', sa.JSON(), nullable=True, comment='后置操作'),
    sa.Column('variables', sa.JSON(), nullable=True, comment='变量'),
    sa.Column('version', sa.String(length=255), nullable=False, comment='版本'),
    sa.Column('remarks', sa.String(length=255), nullable=True, comment='备注'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建人ID'),
    sa.Column('updation_date', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新人ID'),
    sa.Column('enabled_flag', sa.Boolean(), nullable=False, comment='是否删除, 0 删除 1 非删除'),
    sa.Column('trace_id', sa.String(length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8'
    )
    op.create_index(op.f('ix_ui_case_name'), 'ui_case', ['name'], unique=False)
    op.create_table('ui_element',
    sa.Column('name', sa.String(length=255), nullable=False, comment='元素名称'),
    sa.Column('location_method', sa.String(length=255), nullable=True, comment='定位类型'),
    sa.Column('location_value', sa.String(length=255), nullable=True, comment='定位元素值'),
    sa.Column('page_id', sa.Integer(), nullable=False, comment='关联页面'),
    sa.Column('remarks', sa.String(length=255), nullable=True, comment='备注'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建人ID'),
    sa.Column('updation_date', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新人ID'),
    sa.Column('enabled_flag', sa.Boolean(), nullable=False, comment='是否删除, 0 删除 1 非删除'),
    sa.Column('trace_id', sa.String(length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8'
    )
    op.create_index(op.f('ix_ui_element_name'), 'ui_element', ['name'], unique=False)
    op.create_index(op.f('ix_ui_element_page_id'), 'ui_element', ['page_id'], unique=False)
    op.create_table('ui_page',
    sa.Column('name', sa.String(length=255), nullable=False, comment='页面名称'),
    sa.Column('url', sa.String(length=255), nullable=False, comment='url'),
    sa.Column('project_id', sa.Integer(), nullable=True, comment='项目id'),
    sa.Column('module_id', sa.Integer(), nullable=True, comment='模块id'),
    sa.Column('tags', sa.JSON(), nullable=False, comment='标签'),
    sa.Column('remarks', sa.String(length=255), nullable=True, comment='备注'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建人ID'),
    sa.Column('updation_date', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新人ID'),
    sa.Column('enabled_flag', sa.Boolean(), nullable=False, comment='是否删除, 0 删除 1 非删除'),
    sa.Column('trace_id', sa.String(length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8'
    )
    op.create_index(op.f('ix_ui_page_name'), 'ui_page', ['name'], unique=False)
    op.create_table('ui_reports',
    sa.Column('name', sa.String(length=255), nullable=False, comment='报告名'),
    sa.Column('start_time', sa.DateTime(), nullable=True, comment='执行时间'),
    sa.Column('duration', sa.DECIMAL(), nullable=True, comment='执行耗时'),
    sa.Column('case_id', sa.Integer(), nullable=True, comment='用例id'),
    sa.Column('run_type', sa.Integer(), nullable=True, comment='运行类型， 10 同步， 20 异步，30 定时任务'),
    sa.Column('success', sa.Integer(), nullable=True, comment='是否成功'),
    sa.Column('run_count', sa.Integer(), nullable=True, comment='运行步骤数'),
    sa.Column('run_success_count', sa.Integer(), nullable=True, comment='运行成功数'),
    sa.Column('run_fail_count', sa.Integer(), nullable=True, comment='运行失败数'),
    sa.Column('run_skip_count', sa.Integer(), nullable=True, comment='运行跳过数'),
    sa.Column('run_err_count', sa.Integer(), nullable=True, comment='运行错误数'),
    sa.Column('run_log', sa.Text(), nullable=True, comment='运行日志'),
    sa.Column('project_id', sa.String(length=255), nullable=True, comment='项目id'),
    sa.Column('module_id', sa.String(length=255), nullable=True, comment='模块id'),
    sa.Column('env_id', sa.Integer(), nullable=True, comment='运行环境'),
    sa.Column('exec_user_id', sa.Integer(), nullable=True, comment='执行人id'),
    sa.Column('exec_user_name', sa.String(length=255), nullable=True, comment='执行人昵称'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建人ID'),
    sa.Column('updation_date', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新人ID'),
    sa.Column('enabled_flag', sa.Boolean(), nullable=False, comment='是否删除, 0 删除 1 非删除'),
    sa.Column('trace_id', sa.String(length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8'
    )
    op.create_index(op.f('ix_ui_reports_case_id'), 'ui_reports', ['case_id'], unique=False)
    op.create_index(op.f('ix_ui_reports_name'), 'ui_reports', ['name'], unique=False)
    op.create_table('ui_steps',
    sa.Column('index', sa.Integer(), nullable=False, comment='步骤排序'),
    sa.Column('operation', sa.String(length=255), nullable=True, comment='操作'),
    sa.Column('input_data', sa.String(length=255), nullable=True, comment='输入数据'),
    sa.Column('location_method', sa.String(length=255), nullable=True, comment='定位元素方式'),
    sa.Column('location_value', sa.String(length=255), nullable=True, comment='定位元素值'),
    sa.Column('output', sa.String(length=255), nullable=True, comment='输出'),
    sa.Column('remarks', sa.String(length=255), nullable=True, comment='备注'),
    sa.Column('case_id', sa.Integer(), nullable=True, comment='关联ui测试用例'),
    sa.Column('version', sa.String(length=255), nullable=False, comment='版本'),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('created_by', sa.Integer(), nullable=True, comment='创建人ID'),
    sa.Column('updation_date', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('updated_by', sa.Integer(), nullable=True, comment='更新人ID'),
    sa.Column('enabled_flag', sa.Boolean(), nullable=False, comment='是否删除, 0 删除 1 非删除'),
    sa.Column('trace_id', sa.String(length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8'
    )
    op.create_index(op.f('ix_ui_steps_index'), 'ui_steps', ['index'], unique=False)
    op.drop_table('celery_periodic_task_changed')
    op.drop_table('api_test_report_detail_0')
    op.drop_table('celery_crontab_schedule')
    op.drop_index('enabled_flag_index', table_name='case_info')
    op.drop_index('id_index', table_name='case_info')
    op.drop_index('name_index', table_name='case_info')
    op.drop_table('case_info')
    op.drop_index('creation_date_index', table_name='test_reports')
    op.drop_index('id_index', table_name='test_reports')
    op.drop_index('name_index', table_name='test_reports')
    op.drop_table('test_reports')
    op.drop_index('enabled_flag_index', table_name='test_suite')
    op.drop_index('id_index', table_name='test_suite')
    op.drop_index('name_index', table_name='test_suite')
    op.drop_table('test_suite')
    op.drop_index('name', table_name='celery_periodic_task')
    op.drop_table('celery_periodic_task')
    op.drop_table('env_config')
    op.drop_table('celery_solar_schedule')
    op.drop_table('celery_interval_schedule')
    op.alter_column('api_case', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='名称')
    op.alter_column('api_case', 'project_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='所属项目')
    op.alter_column('api_case', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='备注')
    op.alter_column('api_case', 'headers',
               existing_type=mysql.JSON(),
               nullable=False,
               comment='场景请求头',
               existing_comment='请求头')
    op.alter_column('api_case', 'variables',
               existing_type=mysql.JSON(),
               nullable=False,
               comment='场景变量',
               existing_comment='变量')
    op.alter_column('api_case', 'step_data',
               existing_type=mysql.JSON(),
               nullable=False,
               comment='场景步骤',
               existing_comment='步骤')
    op.alter_column('api_case', 'step_rely',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               existing_comment='步骤依赖  1依赖， 0 不依赖',
               existing_server_default=sa.text("'1'"))
    op.alter_column('api_case', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_comment='创建人',
               existing_nullable=True)
    op.alter_column('api_case', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment='更新人ID',
               existing_comment='更新人')
    op.alter_column('api_case', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_comment='是否删除')
    op.alter_column('api_case', 'trace_id',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment='trace_id',
               existing_nullable=True)
    op.drop_index('enabled_flag_index', table_name='api_case')
    op.drop_index('id_index', table_name='api_case')
    op.drop_index('name_index', table_name='api_case')
    op.create_index(op.f('ix_api_case_name'), 'api_case', ['name'], unique=False)
    op.alter_column('api_case_step', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               comment='名称')
    op.alter_column('api_case_step', 'parent_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=False,
               comment='父级id')
    op.alter_column('api_case_step', 'suite_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='套件id')
    op.alter_column('api_case_step', 'step_type',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               comment='步骤类型')
    op.alter_column('api_case_step', 'case_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='case_id')
    op.alter_column('api_case_step', 'value',
               existing_type=mysql.JSON(),
               nullable=False,
               comment='步骤参数')
    op.alter_column('api_case_step', 'enable',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='是否生效')
    op.alter_column('api_case_step', 'index',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='顺序')
    op.alter_column('api_case_step', 'node_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               comment='节点id')
    op.alter_column('api_case_step', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('api_case_step', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('api_case_step', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('api_case_step', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('api_case_step', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('api_case_step', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               comment='trace_id',
               existing_nullable=True)
    op.create_index(op.f('ix_api_case_step_name'), 'api_case_step', ['name'], unique=False)
    op.add_column('api_info', sa.Column('setup_code', sa.JSON(), nullable=True, comment='前置code'))
    op.add_column('api_info', sa.Column('teardown_code', sa.JSON(), nullable=True, comment='后置code'))
    op.alter_column('api_info', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='用例名称',
               existing_comment='用例/配置名称')
    op.alter_column('api_info', 'project_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               existing_comment='所属项目')
    op.alter_column('api_info', 'module_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               existing_comment='所属模块')
    op.alter_column('api_info', 'priority',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               existing_comment='优先级')
    op.alter_column('api_info', 'method',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment='请求方式',
               existing_comment='请求方法',
               existing_nullable=True)
    op.alter_column('api_info', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment='描述',
               existing_nullable=True)
    op.alter_column('api_info', 'step_type',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment='描述',
               existing_nullable=True)
    op.alter_column('api_info', 'pre_steps',
               existing_type=mysql.JSON(),
               comment='前置步骤',
               existing_nullable=True)
    op.alter_column('api_info', 'post_steps',
               existing_type=mysql.JSON(),
               comment='后置步骤',
               existing_nullable=True)
    op.alter_column('api_info', 'headers',
               existing_type=mysql.JSON(),
               comment='请求头',
               existing_nullable=True)
    op.alter_column('api_info', 'extracts',
               existing_type=mysql.JSON(),
               comment='提取',
               existing_nullable=True)
    op.alter_column('api_info', 'export',
               existing_type=mysql.JSON(),
               comment='输出',
               existing_nullable=True)
    op.alter_column('api_info', 'sql_request',
               existing_type=mysql.JSON(),
               comment='sql请求参数',
               existing_nullable=True)
    op.alter_column('api_info', 'loop_data',
               existing_type=mysql.JSON(),
               comment='sql请求参数',
               existing_nullable=True)
    op.alter_column('api_info', 'if_data',
               existing_type=mysql.JSON(),
               comment='sql请求参数',
               existing_nullable=True)
    op.alter_column('api_info', 'wait_data',
               existing_type=mysql.JSON(),
               comment='sql请求参数',
               existing_nullable=True)
    op.alter_column('api_info', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('api_info', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('api_info', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('api_info', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('api_info', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('api_info', 'trace_id',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment='trace_id',
               existing_nullable=True)
    op.drop_index('enabled_flag_index', table_name='api_info')
    op.drop_index('id_index', table_name='api_info')
    op.drop_index('name_index', table_name='api_info')
    op.create_index(op.f('ix_api_info_name'), 'api_info', ['name'], unique=False)
    op.drop_column('api_info', 'enable')
    op.add_column('api_test_report', sa.Column('exec_user_id', sa.Integer(), nullable=True, comment='执行人id'))
    op.add_column('api_test_report', sa.Column('exec_user_name', sa.String(length=255), nullable=True, comment='执行人昵称'))
    op.alter_column('api_test_report', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               existing_comment='报告名称')
    op.alter_column('api_test_report', 'run_mode',
               existing_type=mysql.VARCHAR(length=255),
               comment='运行模式， api 接口， case 用例',
               existing_comment='运行模式， case 用例， suites 套件',
               existing_nullable=True)
    op.alter_column('api_test_report', 'run_fail_count',
               existing_type=mysql.INTEGER(display_width=11),
               comment='运行失败数',
               existing_nullable=True)
    op.alter_column('api_test_report', 'run_skip_count',
               existing_type=mysql.INTEGER(display_width=11),
               comment='运行跳过数',
               existing_comment='跳过',
               existing_nullable=True)
    op.alter_column('api_test_report', 'run_err_count',
               existing_type=mysql.INTEGER(display_width=11),
               comment='运行错误数',
               existing_nullable=True)
    op.alter_column('api_test_report', 'env_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='运行环境',
               existing_nullable=True)
    op.alter_column('api_test_report', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('api_test_report', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('api_test_report', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('api_test_report', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('api_test_report', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.create_index(op.f('ix_api_test_report_name'), 'api_test_report', ['name'], unique=False)
    op.alter_column('data_source', 'type',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               existing_comment='数据源类型')
    op.alter_column('data_source', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               existing_comment='数据源名称')
    op.alter_column('data_source', 'host',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='ip',
               existing_comment='主机名')
    op.alter_column('data_source', 'user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               existing_comment='用户名')
    op.alter_column('data_source', 'password',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               existing_comment='密码')
    op.alter_column('data_source', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('data_source', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('data_source', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_comment='是否删除',
               existing_server_default=sa.text("'1'"))
    op.create_index(op.f('ix_data_source_name'), 'data_source', ['name'], unique=False)
    op.create_index(op.f('ix_data_source_type'), 'data_source', ['type'], unique=False)
    op.drop_column('data_source', 'env_id')
    op.alter_column('env', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment='环境名称',
               existing_nullable=False)
    op.alter_column('env', 'domain_name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='url地址',
               existing_comment='环境域名')
    op.alter_column('env', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='说明')
    op.alter_column('env', 'variables',
               existing_type=mysql.JSON(),
               nullable=False,
               existing_comment='环境变量')
    op.alter_column('env', 'headers',
               existing_type=mysql.JSON(),
               nullable=False,
               existing_comment='环境请求头')
    op.alter_column('env', 'data_sources',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='数据源')
    op.alter_column('env', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('env', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('env', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('env', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('env', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               comment='是否删除, 0 删除 1 非删除',
               existing_nullable=False,
               existing_server_default=sa.text("'1'"))
    op.create_index(op.f('ix_env_name'), 'env', ['name'], unique=False)
    op.alter_column('env_data_source', 'env_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='环境id',
               existing_nullable=True)
    op.alter_column('env_data_source', 'data_source_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='数据源id',
               existing_nullable=True)
    op.alter_column('env_data_source', 'created_by',
               existing_type=mysql.VARCHAR(length=64),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('env_data_source', 'updated_by',
               existing_type=mysql.VARCHAR(length=64),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('env_data_source', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_comment='是否删除')
    op.drop_index('index_data_source_id', table_name='env_data_source')
    op.drop_index('index_env_id', table_name='env_data_source')
    op.drop_index('index_id', table_name='env_data_source')
    op.create_index(op.f('ix_env_data_source_data_source_id'), 'env_data_source', ['data_source_id'], unique=False)
    op.create_index(op.f('ix_env_data_source_env_id'), 'env_data_source', ['env_id'], unique=False)
    op.alter_column('env_func', 'env_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='环境id',
               existing_nullable=True)
    op.alter_column('env_func', 'func_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='辅助函数id',
               existing_nullable=True)
    op.alter_column('env_func', 'created_by',
               existing_type=mysql.VARCHAR(length=64),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('env_func', 'updated_by',
               existing_type=mysql.VARCHAR(length=64),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('env_func', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_comment='是否删除')
    op.drop_index('index_data_source_id', table_name='env_func')
    op.drop_index('index_env_id', table_name='env_func')
    op.drop_index('index_id', table_name='env_func')
    op.create_index(op.f('ix_env_func_env_id'), 'env_func', ['env_id'], unique=False)
    op.create_index(op.f('ix_env_func_func_id'), 'env_func', ['func_id'], unique=False)
    op.alter_column('file_info', 'updation_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_comment='更新时间')
    op.alter_column('file_info', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               existing_comment='trace_id')
    op.alter_column('functions', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='name')
    op.alter_column('functions', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='备注')
    op.alter_column('functions', 'project_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='关联项目')
    op.alter_column('functions', 'content',
               existing_type=mysql.TEXT(collation='utf8_unicode_ci'),
               comment='自定义函数内容',
               existing_nullable=True)
    op.alter_column('functions', 'func_type',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='函数类型')
    op.alter_column('functions', 'func_tags',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='函数标签')
    op.alter_column('functions', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('functions', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('functions', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('functions', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('functions', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('lookup', 'code',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment='编码',
               existing_comment='数据字典编码',
               existing_nullable=False)
    op.alter_column('lookup', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('lookup', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('lookup', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('lookup', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('lookup', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               comment='是否删除, 0 删除 1 非删除',
               existing_nullable=False,
               existing_server_default=sa.text("'1'"))
    op.create_index(op.f('ix_lookup_code'), 'lookup', ['code'], unique=False)
    op.alter_column('lookup_value', 'created_by',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               comment='创建人ID',
               existing_comment='创建人',
               existing_nullable=True)
    op.alter_column('lookup_value', 'updation_date',
               existing_type=mysql.TIMESTAMP(),
               comment='更新时间',
               existing_comment='最后更新时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lookup_value', 'updated_by',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               comment='更新人ID',
               existing_comment='最后更新人',
               existing_nullable=True)
    op.alter_column('lookup_value', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               comment='是否删除, 0 删除 1 非删除',
               existing_comment='是否有效',
               existing_nullable=False,
               existing_server_default=sa.text("'1'"))
    op.drop_index('idx_lookup_code', table_name='lookup_value')
    op.drop_index('idx_lookup_enable', table_name='lookup_value')
    op.drop_index('idx_lookup_id', table_name='lookup_value')
    op.create_index(op.f('ix_lookup_value_lookup_code'), 'lookup_value', ['lookup_code'], unique=False)
    op.create_index(op.f('ix_lookup_value_lookup_id'), 'lookup_value', ['lookup_id'], unique=False)
    op.alter_column('menu', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               existing_comment='菜单名称')
    op.alter_column('menu', 'icon',
               existing_type=mysql.VARCHAR(length=255),
               comment='icon',
               existing_comment='图标',
               existing_nullable=True)
    op.alter_column('menu', 'parent_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='父级菜单id',
               existing_comment='父级id',
               existing_nullable=True)
    op.alter_column('menu', 'redirect',
               existing_type=mysql.VARCHAR(length=255),
               comment='重定向路由',
               existing_comment='重定向',
               existing_nullable=True)
    op.alter_column('menu', 'sort',
               existing_type=mysql.INTEGER(display_width=11),
               comment='排序',
               existing_nullable=True)
    op.alter_column('menu', 'lookup_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='数据字典',
               existing_nullable=True)
    op.alter_column('menu', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('menu', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('menu', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('menu', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('menu', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.drop_index('enabled_flag_index', table_name='menu')
    op.drop_index('id_index', table_name='menu')
    op.drop_index('name_index', table_name='menu')
    op.create_index(op.f('ix_menu_icon'), 'menu', ['icon'], unique=False)
    op.create_index(op.f('ix_menu_name'), 'menu', ['name'], unique=False)
    op.create_index(op.f('ix_menu_title'), 'menu', ['title'], unique=False)
    op.alter_column('menu_view_history', 'updation_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_comment='更新时间')
    op.alter_column('menu_view_history', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               existing_comment='trace_id')
    op.alter_column('module_info', 'project_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               existing_comment='归属项目id')
    op.alter_column('module_info', 'test_user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='测试负责人',
               existing_comment='测试负责人id')
    op.alter_column('module_info', 'simple_desc',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               existing_comment='简要描述')
    op.alter_column('module_info', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               existing_comment='其他信息')
    op.alter_column('module_info', 'module_packages',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='模块对应的包名称')
    op.alter_column('module_info', 'leader_user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               existing_comment='负责人')
    op.alter_column('module_info', 'priority',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               comment='默认执行用例优先级')
    op.alter_column('module_info', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_comment='创建人',
               existing_nullable=True)
    op.alter_column('module_info', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('module_info', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_comment='是否删除')
    op.drop_index('enabled_flag_index', table_name='module_info')
    op.drop_index('id_index', table_name='module_info')
    op.drop_index('ix_module_info_module_name', table_name='module_info')
    op.drop_index('name_index', table_name='module_info')
    op.create_index(op.f('ix_module_info_id'), 'module_info', ['id'], unique=False)
    op.create_index(op.f('ix_module_info_module_packages'), 'module_info', ['module_packages'], unique=False)
    op.create_index(op.f('ix_module_info_name'), 'module_info', ['name'], unique=False)
    op.alter_column('notify', 'updation_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_comment='更新时间')
    op.alter_column('notify', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               existing_comment='trace_id')
    op.alter_column('project_info', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               nullable=False,
               existing_comment='项目名称')
    op.alter_column('project_info', 'responsible_name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               nullable=False,
               existing_comment='负责人')
    op.alter_column('project_info', 'test_user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=100),
               nullable=False,
               existing_comment='测试人员')
    op.alter_column('project_info', 'dev_user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=100),
               nullable=False,
               existing_comment='开发人员')
    op.alter_column('project_info', 'publish_app',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=100),
               nullable=False,
               existing_comment='发布应用')
    op.alter_column('project_info', 'product_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='产品线id',
               existing_comment='产品线',
               existing_nullable=True)
    op.alter_column('project_info', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_comment='创建人',
               existing_nullable=True)
    op.alter_column('project_info', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment='更新人ID',
               existing_comment='更新人')
    op.alter_column('project_info', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_comment='是否删除')
    op.drop_index('enabled_flag_index', table_name='project_info')
    op.drop_index('id_index', table_name='project_info')
    op.drop_index('name_index', table_name='project_info')
    op.alter_column('request_history', 'updation_date',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_comment='更新时间')
    op.alter_column('request_history', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               existing_comment='trace_id')
    op.alter_column('roles', 'name',
               existing_type=mysql.VARCHAR(length=255),
               comment='菜单名称',
               existing_comment='名称',
               existing_nullable=True)
    op.alter_column('roles', 'role_type',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='权限类型，10菜单权限，20用户组权限',
               existing_comment='权限类型',
               existing_server_default=sa.text("'10'"))
    op.alter_column('roles', 'menus',
               existing_type=mysql.VARCHAR(length=500),
               comment='菜单列表',
               existing_comment='菜单ids',
               existing_nullable=True)
    op.alter_column('roles', 'status',
               existing_type=mysql.INTEGER(display_width=11),
               comment='状态 10 启用 20 禁用',
               existing_comment='角色状态 10 启用，20 禁用',
               existing_nullable=True,
               existing_server_default=sa.text("'10'"))
    op.alter_column('roles', 'id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='id',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('roles', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment='创建时间',
               existing_nullable=True)
    op.alter_column('roles', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment='创建人ID',
               existing_comment='创建人')
    op.alter_column('roles', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment='更新时间',
               existing_nullable=True)
    op.alter_column('roles', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment='更新人ID',
               existing_comment='更新人')
    op.alter_column('roles', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.create_index(op.f('ix_roles_menus'), 'roles', ['menus'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=False)
    op.create_index(op.f('ix_roles_role_type'), 'roles', ['role_type'], unique=False)
    op.alter_column('user', 'email',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               comment='邮箱',
               existing_comment='密码',
               existing_nullable=True)
    op.alter_column('user', 'roles',
               existing_type=mysql.JSON(),
               nullable=False,
               comment='用户类型',
               existing_comment='用户角色')
    op.alter_column('user', 'status',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='用户状态  1 锁定， 0 正常',
               existing_comment='用户状态 0 正常 1锁定',
               existing_server_default=sa.text("'1'"))
    op.alter_column('user', 'nickname',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               existing_comment='用户昵称')
    op.alter_column('user', 'user_type',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='用户类型 10 管理人员, 20 测试人员',
               existing_comment='用户类型， 10 管理人员, 20 测试人员',
               existing_server_default=sa.text("'10'"))
    op.alter_column('user', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=False,
               existing_comment='用户描述')
    op.alter_column('user', 'avatar',
               existing_type=mysql.LONGTEXT(collation='utf8_unicode_ci'),
               nullable=False,
               comment='头像',
               existing_comment='头像数据')
    op.alter_column('user', 'tags',
               existing_type=mysql.JSON(),
               nullable=False,
               comment='标签',
               existing_comment='用户标签')
    op.alter_column('user', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('user', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('user', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_comment='是否删除',
               existing_server_default=sa.text("'1'"))
    op.drop_index('id_index', table_name='user')
    op.drop_index('ix_user_email', table_name='user')
    op.drop_index('ix_user_password', table_name='user')
    op.alter_column('user_login_record', 'user_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='用户id',
               existing_nullable=True)
    op.alter_column('user_login_record', 'created_by',
               existing_type=mysql.VARCHAR(length=64),
               comment='创建人ID',
               existing_nullable=True)
    op.alter_column('user_login_record', 'updated_by',
               existing_type=mysql.VARCHAR(length=64),
               comment='更新人ID',
               existing_nullable=True)
    op.alter_column('user_login_record', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               comment='是否删除, 0 删除 1 非删除',
               existing_comment='是否删除')
    op.drop_index('idx_login_record_code', table_name='user_login_record')
    op.drop_index('idx_login_record_login_ip', table_name='user_login_record')
    op.drop_index('idx_login_record_login_time', table_name='user_login_record')
    op.drop_index('idx_login_record_login_type', table_name='user_login_record')
    op.drop_index('idx_login_record_ret_code', table_name='user_login_record')
    op.drop_index('idx_login_record_token', table_name='user_login_record')
    op.create_index(op.f('ix_user_login_record_code'), 'user_login_record', ['code'], unique=False)
    op.create_index(op.f('ix_user_login_record_login_ip'), 'user_login_record', ['login_ip'], unique=False)
    op.create_index(op.f('ix_user_login_record_login_time'), 'user_login_record', ['login_time'], unique=False)
    op.create_index(op.f('ix_user_login_record_login_type'), 'user_login_record', ['login_type'], unique=False)
    op.create_index(op.f('ix_user_login_record_ret_code'), 'user_login_record', ['ret_code'], unique=False)
    op.create_index(op.f('ix_user_login_record_token'), 'user_login_record', ['token'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_login_record_token'), table_name='user_login_record')
    op.drop_index(op.f('ix_user_login_record_ret_code'), table_name='user_login_record')
    op.drop_index(op.f('ix_user_login_record_login_type'), table_name='user_login_record')
    op.drop_index(op.f('ix_user_login_record_login_time'), table_name='user_login_record')
    op.drop_index(op.f('ix_user_login_record_login_ip'), table_name='user_login_record')
    op.drop_index(op.f('ix_user_login_record_code'), table_name='user_login_record')
    op.create_index('idx_login_record_token', 'user_login_record', ['token'], unique=False)
    op.create_index('idx_login_record_ret_code', 'user_login_record', ['ret_code'], unique=False)
    op.create_index('idx_login_record_login_type', 'user_login_record', ['login_type'], unique=False)
    op.create_index('idx_login_record_login_time', 'user_login_record', ['login_time'], unique=False)
    op.create_index('idx_login_record_login_ip', 'user_login_record', ['login_ip'], unique=False)
    op.create_index('idx_login_record_code', 'user_login_record', ['code'], unique=False)
    op.alter_column('user_login_record', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment='是否删除',
               existing_comment='是否删除, 0 删除 1 非删除')
    op.alter_column('user_login_record', 'updated_by',
               existing_type=mysql.VARCHAR(length=64),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('user_login_record', 'created_by',
               existing_type=mysql.VARCHAR(length=64),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('user_login_record', 'user_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='用户id',
               existing_nullable=True)
    op.create_index('ix_user_password', 'user', ['password'], unique=False)
    op.create_index('ix_user_email', 'user', ['email'], unique=False)
    op.create_index('id_index', 'user', ['id'], unique=False)
    op.alter_column('user', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment='是否删除',
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('user', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('user', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('user', 'tags',
               existing_type=mysql.JSON(),
               nullable=True,
               comment='用户标签',
               existing_comment='标签')
    op.alter_column('user', 'avatar',
               existing_type=mysql.LONGTEXT(collation='utf8_unicode_ci'),
               nullable=True,
               comment='头像数据',
               existing_comment='头像')
    op.alter_column('user', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               existing_comment='用户描述')
    op.alter_column('user', 'user_type',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment='用户类型， 10 管理人员, 20 测试人员',
               existing_comment='用户类型 10 管理人员, 20 测试人员',
               existing_server_default=sa.text("'10'"))
    op.alter_column('user', 'nickname',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               existing_comment='用户昵称')
    op.alter_column('user', 'status',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment='用户状态 0 正常 1锁定',
               existing_comment='用户状态  1 锁定， 0 正常',
               existing_server_default=sa.text("'1'"))
    op.alter_column('user', 'roles',
               existing_type=mysql.JSON(),
               nullable=True,
               comment='用户角色',
               existing_comment='用户类型')
    op.alter_column('user', 'email',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               comment='密码',
               existing_comment='邮箱',
               existing_nullable=True)
    op.drop_index(op.f('ix_roles_role_type'), table_name='roles')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_menus'), table_name='roles')
    op.alter_column('roles', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('roles', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='更新人',
               existing_comment='更新人ID')
    op.alter_column('roles', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('roles', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='创建人',
               existing_comment='创建人ID')
    op.alter_column('roles', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('roles', 'id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='id',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('roles', 'status',
               existing_type=mysql.INTEGER(display_width=11),
               comment='角色状态 10 启用，20 禁用',
               existing_comment='状态 10 启用 20 禁用',
               existing_nullable=True,
               existing_server_default=sa.text("'10'"))
    op.alter_column('roles', 'menus',
               existing_type=mysql.VARCHAR(length=500),
               comment='菜单ids',
               existing_comment='菜单列表',
               existing_nullable=True)
    op.alter_column('roles', 'role_type',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment='权限类型',
               existing_comment='权限类型，10菜单权限，20用户组权限',
               existing_server_default=sa.text("'10'"))
    op.alter_column('roles', 'name',
               existing_type=mysql.VARCHAR(length=255),
               comment='名称',
               existing_comment='菜单名称',
               existing_nullable=True)
    op.alter_column('request_history', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               existing_comment='trace_id')
    op.alter_column('request_history', 'updation_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_comment='更新时间')
    op.create_index('name_index', 'project_info', ['name'], unique=False)
    op.create_index('id_index', 'project_info', ['id'], unique=False)
    op.create_index('enabled_flag_index', 'project_info', ['enabled_flag'], unique=False)
    op.alter_column('project_info', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment='是否删除',
               existing_comment='是否删除, 0 删除 1 非删除')
    op.alter_column('project_info', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='更新人',
               existing_comment='更新人ID')
    op.alter_column('project_info', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人',
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('project_info', 'product_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='产品线',
               existing_comment='产品线id',
               existing_nullable=True)
    op.alter_column('project_info', 'publish_app',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=100),
               nullable=True,
               existing_comment='发布应用')
    op.alter_column('project_info', 'dev_user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=100),
               nullable=True,
               existing_comment='开发人员')
    op.alter_column('project_info', 'test_user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=100),
               nullable=True,
               existing_comment='测试人员')
    op.alter_column('project_info', 'responsible_name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               nullable=True,
               existing_comment='负责人')
    op.alter_column('project_info', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               nullable=True,
               existing_comment='项目名称')
    op.alter_column('notify', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               existing_comment='trace_id')
    op.alter_column('notify', 'updation_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_comment='更新时间')
    op.drop_index(op.f('ix_module_info_name'), table_name='module_info')
    op.drop_index(op.f('ix_module_info_module_packages'), table_name='module_info')
    op.drop_index(op.f('ix_module_info_id'), table_name='module_info')
    op.create_index('name_index', 'module_info', ['name'], unique=False)
    op.create_index('ix_module_info_module_name', 'module_info', ['name'], unique=False)
    op.create_index('id_index', 'module_info', ['id'], unique=False)
    op.create_index('enabled_flag_index', 'module_info', ['enabled_flag'], unique=False)
    op.alter_column('module_info', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment='是否删除',
               existing_comment='是否删除, 0 删除 1 非删除')
    op.alter_column('module_info', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('module_info', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人',
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('module_info', 'priority',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='默认执行用例优先级')
    op.alter_column('module_info', 'leader_user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               existing_comment='负责人')
    op.alter_column('module_info', 'module_packages',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='模块对应的包名称')
    op.alter_column('module_info', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               existing_comment='其他信息')
    op.alter_column('module_info', 'simple_desc',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               existing_comment='简要描述')
    op.alter_column('module_info', 'test_user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment='测试负责人id',
               existing_comment='测试负责人')
    op.alter_column('module_info', 'project_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               existing_comment='归属项目id')
    op.alter_column('menu_view_history', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               existing_comment='trace_id')
    op.alter_column('menu_view_history', 'updation_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_comment='更新时间')
    op.drop_index(op.f('ix_menu_title'), table_name='menu')
    op.drop_index(op.f('ix_menu_name'), table_name='menu')
    op.drop_index(op.f('ix_menu_icon'), table_name='menu')
    op.create_index('name_index', 'menu', ['name'], unique=False)
    op.create_index('id_index', 'menu', ['id'], unique=False)
    op.create_index('enabled_flag_index', 'menu', ['enabled_flag'], unique=False)
    op.alter_column('menu', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('menu', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('menu', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('menu', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('menu', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('menu', 'lookup_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='数据字典',
               existing_nullable=True)
    op.alter_column('menu', 'sort',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='排序',
               existing_nullable=True)
    op.alter_column('menu', 'redirect',
               existing_type=mysql.VARCHAR(length=255),
               comment='重定向',
               existing_comment='重定向路由',
               existing_nullable=True)
    op.alter_column('menu', 'parent_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='父级id',
               existing_comment='父级菜单id',
               existing_nullable=True)
    op.alter_column('menu', 'icon',
               existing_type=mysql.VARCHAR(length=255),
               comment='图标',
               existing_comment='icon',
               existing_nullable=True)
    op.alter_column('menu', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               existing_comment='菜单名称')
    op.drop_index(op.f('ix_lookup_value_lookup_id'), table_name='lookup_value')
    op.drop_index(op.f('ix_lookup_value_lookup_code'), table_name='lookup_value')
    op.create_index('idx_lookup_id', 'lookup_value', ['lookup_id', 'enabled_flag'], unique=False)
    op.create_index('idx_lookup_enable', 'lookup_value', ['enabled_flag'], unique=False)
    op.create_index('idx_lookup_code', 'lookup_value', ['lookup_code'], unique=False)
    op.alter_column('lookup_value', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               comment='是否有效',
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_nullable=False,
               existing_server_default=sa.text("'1'"))
    op.alter_column('lookup_value', 'updated_by',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               comment='最后更新人',
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('lookup_value', 'updation_date',
               existing_type=mysql.TIMESTAMP(),
               comment='最后更新时间',
               existing_comment='更新时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lookup_value', 'created_by',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=64),
               comment='创建人',
               existing_comment='创建人ID',
               existing_nullable=True)
    op.drop_index(op.f('ix_lookup_code'), table_name='lookup')
    op.alter_column('lookup', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_nullable=False,
               existing_server_default=sa.text("'1'"))
    op.alter_column('lookup', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('lookup', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('lookup', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('lookup', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('lookup', 'code',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment='数据字典编码',
               existing_comment='编码',
               existing_nullable=False)
    op.alter_column('functions', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('functions', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('functions', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('functions', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('functions', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('functions', 'func_tags',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='函数标签')
    op.alter_column('functions', 'func_type',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='函数类型')
    op.alter_column('functions', 'content',
               existing_type=mysql.TEXT(collation='utf8_unicode_ci'),
               comment=None,
               existing_comment='自定义函数内容',
               existing_nullable=True)
    op.alter_column('functions', 'project_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='关联项目')
    op.alter_column('functions', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='备注')
    op.alter_column('functions', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='name')
    op.alter_column('file_info', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               existing_comment='trace_id')
    op.alter_column('file_info', 'updation_date',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_comment='更新时间')
    op.drop_index(op.f('ix_env_func_func_id'), table_name='env_func')
    op.drop_index(op.f('ix_env_func_env_id'), table_name='env_func')
    op.create_index('index_id', 'env_func', ['id'], unique=False)
    op.create_index('index_env_id', 'env_func', ['env_id'], unique=False)
    op.create_index('index_data_source_id', 'env_func', ['func_id'], unique=False)
    op.alter_column('env_func', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment='是否删除',
               existing_comment='是否删除, 0 删除 1 非删除')
    op.alter_column('env_func', 'updated_by',
               existing_type=mysql.VARCHAR(length=64),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('env_func', 'created_by',
               existing_type=mysql.VARCHAR(length=64),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('env_func', 'func_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='辅助函数id',
               existing_nullable=True)
    op.alter_column('env_func', 'env_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='环境id',
               existing_nullable=True)
    op.drop_index(op.f('ix_env_data_source_env_id'), table_name='env_data_source')
    op.drop_index(op.f('ix_env_data_source_data_source_id'), table_name='env_data_source')
    op.create_index('index_id', 'env_data_source', ['id'], unique=False)
    op.create_index('index_env_id', 'env_data_source', ['env_id'], unique=False)
    op.create_index('index_data_source_id', 'env_data_source', ['data_source_id'], unique=False)
    op.alter_column('env_data_source', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment='是否删除',
               existing_comment='是否删除, 0 删除 1 非删除')
    op.alter_column('env_data_source', 'updated_by',
               existing_type=mysql.VARCHAR(length=64),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('env_data_source', 'created_by',
               existing_type=mysql.VARCHAR(length=64),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('env_data_source', 'data_source_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='数据源id',
               existing_nullable=True)
    op.alter_column('env_data_source', 'env_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='环境id',
               existing_nullable=True)
    op.drop_index(op.f('ix_env_name'), table_name='env')
    op.alter_column('env', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_nullable=False,
               existing_server_default=sa.text("'1'"))
    op.alter_column('env', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('env', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('env', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('env', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('env', 'data_sources',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='数据源')
    op.alter_column('env', 'headers',
               existing_type=mysql.JSON(),
               nullable=True,
               existing_comment='环境请求头')
    op.alter_column('env', 'variables',
               existing_type=mysql.JSON(),
               nullable=True,
               existing_comment='环境变量')
    op.alter_column('env', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='说明')
    op.alter_column('env', 'domain_name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment='环境域名',
               existing_comment='url地址')
    op.alter_column('env', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment=None,
               existing_comment='环境名称',
               existing_nullable=False)
    op.add_column('data_source', sa.Column('env_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='所属环境id'))
    op.drop_index(op.f('ix_data_source_type'), table_name='data_source')
    op.drop_index(op.f('ix_data_source_name'), table_name='data_source')
    op.alter_column('data_source', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment='是否删除',
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('data_source', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('data_source', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('data_source', 'password',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               existing_comment='密码')
    op.alter_column('data_source', 'user',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               existing_comment='用户名')
    op.alter_column('data_source', 'host',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment='主机名',
               existing_comment='ip')
    op.alter_column('data_source', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               existing_comment='数据源名称')
    op.alter_column('data_source', 'type',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               existing_comment='数据源类型')
    op.drop_index(op.f('ix_api_test_report_name'), table_name='api_test_report')
    op.alter_column('api_test_report', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('api_test_report', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('api_test_report', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('api_test_report', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('api_test_report', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('api_test_report', 'env_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='运行环境',
               existing_nullable=True)
    op.alter_column('api_test_report', 'run_err_count',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='运行错误数',
               existing_nullable=True)
    op.alter_column('api_test_report', 'run_skip_count',
               existing_type=mysql.INTEGER(display_width=11),
               comment='跳过',
               existing_comment='运行跳过数',
               existing_nullable=True)
    op.alter_column('api_test_report', 'run_fail_count',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='运行失败数',
               existing_nullable=True)
    op.alter_column('api_test_report', 'run_mode',
               existing_type=mysql.VARCHAR(length=255),
               comment='运行模式， case 用例， suites 套件',
               existing_comment='运行模式， api 接口， case 用例',
               existing_nullable=True)
    op.alter_column('api_test_report', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               existing_comment='报告名称')
    op.drop_column('api_test_report', 'exec_user_name')
    op.drop_column('api_test_report', 'exec_user_id')
    op.add_column('api_info', sa.Column('enable', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_api_info_name'), table_name='api_info')
    op.create_index('name_index', 'api_info', ['name'], unique=False)
    op.create_index('id_index', 'api_info', ['id'], unique=False)
    op.create_index('enabled_flag_index', 'api_info', ['enabled_flag'], unique=False)
    op.alter_column('api_info', 'trace_id',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment=None,
               existing_comment='trace_id',
               existing_nullable=True)
    op.alter_column('api_info', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('api_info', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('api_info', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('api_info', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('api_info', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('api_info', 'wait_data',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='sql请求参数',
               existing_nullable=True)
    op.alter_column('api_info', 'if_data',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='sql请求参数',
               existing_nullable=True)
    op.alter_column('api_info', 'loop_data',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='sql请求参数',
               existing_nullable=True)
    op.alter_column('api_info', 'sql_request',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='sql请求参数',
               existing_nullable=True)
    op.alter_column('api_info', 'export',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='输出',
               existing_nullable=True)
    op.alter_column('api_info', 'extracts',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='提取',
               existing_nullable=True)
    op.alter_column('api_info', 'headers',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='请求头',
               existing_nullable=True)
    op.alter_column('api_info', 'post_steps',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='后置步骤',
               existing_nullable=True)
    op.alter_column('api_info', 'pre_steps',
               existing_type=mysql.JSON(),
               comment=None,
               existing_comment='前置步骤',
               existing_nullable=True)
    op.alter_column('api_info', 'step_type',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment=None,
               existing_comment='描述',
               existing_nullable=True)
    op.alter_column('api_info', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment=None,
               existing_comment='描述',
               existing_nullable=True)
    op.alter_column('api_info', 'method',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment='请求方法',
               existing_comment='请求方式',
               existing_nullable=True)
    op.alter_column('api_info', 'priority',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               existing_comment='优先级')
    op.alter_column('api_info', 'module_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               existing_comment='所属模块')
    op.alter_column('api_info', 'project_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               existing_comment='所属项目')
    op.alter_column('api_info', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment='用例/配置名称',
               existing_comment='用例名称')
    op.drop_column('api_info', 'teardown_code')
    op.drop_column('api_info', 'setup_code')
    op.drop_index(op.f('ix_api_case_step_name'), table_name='api_case_step')
    op.alter_column('api_case_step', 'trace_id',
               existing_type=mysql.VARCHAR(length=255),
               comment=None,
               existing_comment='trace_id',
               existing_nullable=True)
    op.alter_column('api_case_step', 'enabled_flag',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='是否删除, 0 删除 1 非删除',
               existing_server_default=sa.text("'1'"))
    op.alter_column('api_case_step', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='更新人ID',
               existing_nullable=True)
    op.alter_column('api_case_step', 'updation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True)
    op.alter_column('api_case_step', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('api_case_step', 'creation_date',
               existing_type=mysql.DATETIME(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True)
    op.alter_column('api_case_step', 'node_id',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               comment=None,
               existing_comment='节点id')
    op.alter_column('api_case_step', 'index',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='顺序')
    op.alter_column('api_case_step', 'enable',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='是否生效')
    op.alter_column('api_case_step', 'value',
               existing_type=mysql.JSON(),
               nullable=True,
               comment=None,
               existing_comment='步骤参数')
    op.alter_column('api_case_step', 'case_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='case_id')
    op.alter_column('api_case_step', 'step_type',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               comment=None,
               existing_comment='步骤类型')
    op.alter_column('api_case_step', 'suite_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='套件id')
    op.alter_column('api_case_step', 'parent_id',
               existing_type=mysql.BIGINT(display_width=20),
               nullable=True,
               comment=None,
               existing_comment='父级id')
    op.alter_column('api_case_step', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               comment=None,
               existing_comment='名称')
    op.drop_index(op.f('ix_api_case_name'), table_name='api_case')
    op.create_index('name_index', 'api_case', ['name'], unique=False)
    op.create_index('id_index', 'api_case', ['id'], unique=False)
    op.create_index('enabled_flag_index', 'api_case', ['enabled_flag'], unique=False)
    op.alter_column('api_case', 'trace_id',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               comment=None,
               existing_comment='trace_id',
               existing_nullable=True)
    op.alter_column('api_case', 'enabled_flag',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               comment='是否删除',
               existing_comment='是否删除, 0 删除 1 非删除')
    op.alter_column('api_case', 'updated_by',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False,
               comment='更新人',
               existing_comment='更新人ID')
    op.alter_column('api_case', 'created_by',
               existing_type=mysql.INTEGER(display_width=11),
               comment='创建人',
               existing_comment='创建人ID',
               existing_nullable=True)
    op.alter_column('api_case', 'step_rely',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               existing_comment='步骤依赖  1依赖， 0 不依赖',
               existing_server_default=sa.text("'1'"))
    op.alter_column('api_case', 'step_data',
               existing_type=mysql.JSON(),
               nullable=True,
               comment='步骤',
               existing_comment='场景步骤')
    op.alter_column('api_case', 'variables',
               existing_type=mysql.JSON(),
               nullable=True,
               comment='变量',
               existing_comment='场景变量')
    op.alter_column('api_case', 'headers',
               existing_type=mysql.JSON(),
               nullable=True,
               comment='请求头',
               existing_comment='场景请求头')
    op.alter_column('api_case', 'remarks',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='备注')
    op.alter_column('api_case', 'project_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True,
               comment=None,
               existing_comment='所属项目')
    op.alter_column('api_case', 'name',
               existing_type=mysql.VARCHAR(collation='utf8_unicode_ci', length=255),
               nullable=True,
               comment=None,
               existing_comment='名称')
    op.create_table('celery_interval_schedule',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('every', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('period', mysql.VARCHAR(collation='utf8_unicode_ci', length=24), nullable=True),
    sa.Column('creation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updated_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('created_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('enabled_flag', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('trace_id', mysql.VARCHAR(charset='utf8', length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_table('celery_solar_schedule',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('event', mysql.VARCHAR(collation='utf8_unicode_ci', length=24), nullable=True),
    sa.Column('latitude', mysql.FLOAT(), nullable=True),
    sa.Column('longitude', mysql.FLOAT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_table('env_config',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='环境名称'),
    sa.Column('domain_name', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='环境域名'),
    sa.Column('variables', mysql.JSON(), nullable=True, comment='环境变量'),
    sa.Column('headers', mysql.JSON(), nullable=True, comment='环境请求头'),
    sa.Column('creation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updation_date', mysql.DATETIME(), nullable=True),
    sa.Column('enabled_flag', mysql.INTEGER(display_width=11), server_default=sa.text("'1'"), autoincrement=False, nullable=False),
    sa.Column('created_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('updated_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('remarks', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('trace_id', mysql.VARCHAR(charset='utf8', length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_table('celery_periodic_task',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('task', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('interval_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('crontab', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('crontab_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('solar_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('args', mysql.TEXT(collation='utf8_unicode_ci'), nullable=True),
    sa.Column('kwargs', mysql.TEXT(collation='utf8_unicode_ci'), nullable=True),
    sa.Column('queue', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('exchange', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('routing_key', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('priority', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('expires', mysql.DATETIME(), nullable=True),
    sa.Column('one_off', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('start_time', mysql.DATETIME(), nullable=True),
    sa.Column('enabled', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('last_run_at', mysql.DATETIME(), nullable=True),
    sa.Column('total_run_count', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('date_changed', mysql.DATETIME(), nullable=True),
    sa.Column('description', mysql.TEXT(collation='utf8_unicode_ci'), nullable=True),
    sa.Column('run_type', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('project_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('module_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('suite_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('case_ids', mysql.VARCHAR(collation='utf8_unicode_ci', length=500), nullable=True),
    sa.Column('ui_env_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('ui_ids', mysql.VARCHAR(collation='utf8_unicode_ci', length=500), nullable=True),
    sa.Column('script_ids', mysql.VARCHAR(collation='utf8_unicode_ci', length=500), nullable=True),
    sa.Column('creation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updated_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('created_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('enabled_flag', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('run_mode', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('trace_id', mysql.VARCHAR(charset='utf8', length=255), nullable=True, comment='trace_id'),
    sa.Column('task_type', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='crontab interval'),
    sa.Column('case_env_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('interval_every', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('interval_period', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('task_tags', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('remarks', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_index('name', 'celery_periodic_task', ['name'], unique=False)
    op.create_table('test_suite',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('project_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('include', mysql.VARCHAR(collation='utf8_unicode_ci', length=500), nullable=True),
    sa.Column('config_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('remarks', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('enabled_flag', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True, comment='是否删除'),
    sa.Column('updation_date', mysql.DATETIME(), nullable=True, comment='更新时间'),
    sa.Column('updated_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False, comment='更新人'),
    sa.Column('creation_date', mysql.DATETIME(), nullable=True, comment='创建时间'),
    sa.Column('created_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='创建人'),
    sa.Column('trace_id', mysql.VARCHAR(charset='utf8', length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_index('name_index', 'test_suite', ['name'], unique=False)
    op.create_index('id_index', 'test_suite', ['id'], unique=False)
    op.create_index('enabled_flag_index', 'test_suite', ['enabled_flag'], unique=False)
    op.create_table('test_reports',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False, comment='主键'),
    sa.Column('name', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=False),
    sa.Column('start_at', mysql.DATETIME(), nullable=True, comment='开始时间'),
    sa.Column('scene_num', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='场景数'),
    sa.Column('duration', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='执行用时 秒'),
    sa.Column('run_type', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='运行类型，同步，异步'),
    sa.Column('task_type', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='任务类型, test,module,project'),
    sa.Column('run_mode', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('project_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('module_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('report_type', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('run_case_priority', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('execute_user_id', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('execute_source', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('execute_service', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.Column('successful_use_case', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='成功用例数'),
    sa.Column('report_body', mysql.LONGTEXT(collation='utf8_unicode_ci'), nullable=True, comment='报告详情'),
    sa.Column('run_test_count', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='运行用例数'),
    sa.Column('success', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('enabled_flag', mysql.INTEGER(display_width=11), server_default=sa.text("'1'"), autoincrement=False, nullable=True),
    sa.Column('creation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updation_date', mysql.DATETIME(), nullable=True),
    sa.Column('created_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('updated_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('trace_id', mysql.VARCHAR(charset='utf8', length=255), nullable=True, comment='trace_id'),
    sa.Column('exec_user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('exec_user_name', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_index('name_index', 'test_reports', ['name'], unique=False)
    op.create_index('id_index', 'test_reports', ['id'], unique=False)
    op.create_index('creation_date_index', 'test_reports', ['creation_date'], unique=False)
    op.create_table('case_info',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('case_type', mysql.INTEGER(display_width=11), server_default=sa.text("'1'"), autoincrement=False, nullable=True, comment='test/config,测试类型, 1 case  2 config'),
    sa.Column('name', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='用例/配置名称'),
    sa.Column('project_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='所属项目'),
    sa.Column('module_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='所属模块'),
    sa.Column('created_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('updated_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('include', mysql.TEXT(collation='utf8_unicode_ci'), nullable=True, comment='前置config/test'),
    sa.Column('testcase', mysql.LONGTEXT(collation='utf8_unicode_ci'), nullable=True),
    sa.Column('service_name', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='所属服务名称'),
    sa.Column('run_type', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('creation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updation_date', mysql.DATETIME(), nullable=True),
    sa.Column('enabled_flag', mysql.INTEGER(display_width=11), server_default=sa.text("'1'"), autoincrement=False, nullable=True),
    sa.Column('case_status', mysql.INTEGER(display_width=11), server_default=sa.text("'10'"), autoincrement=False, nullable=True, comment='用例状态 10, 生效 ， 20 失效'),
    sa.Column('priority', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='优先级'),
    sa.Column('config_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='用例配置id'),
    sa.Column('code_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True, comment='关联接口id'),
    sa.Column('code', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='接口code'),
    sa.Column('case_tab', mysql.VARCHAR(collation='utf8_unicode_ci', length=255), nullable=True, comment='用例标签'),
    sa.Column('trace_id', mysql.VARCHAR(charset='utf8', length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_index('name_index', 'case_info', ['name'], unique=False)
    op.create_index('id_index', 'case_info', ['id'], unique=False)
    op.create_index('enabled_flag_index', 'case_info', ['enabled_flag'], unique=False)
    op.create_table('celery_crontab_schedule',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('minute', mysql.VARCHAR(collation='utf8_unicode_ci', length=240), nullable=True),
    sa.Column('hour', mysql.VARCHAR(collation='utf8_unicode_ci', length=96), nullable=True),
    sa.Column('day_of_week', mysql.VARCHAR(collation='utf8_unicode_ci', length=64), nullable=True),
    sa.Column('day_of_month', mysql.VARCHAR(collation='utf8_unicode_ci', length=124), nullable=True),
    sa.Column('month_of_year', mysql.VARCHAR(collation='utf8_unicode_ci', length=64), nullable=True),
    sa.Column('timezone', mysql.VARCHAR(collation='utf8_unicode_ci', length=64), nullable=True),
    sa.Column('creation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updated_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('created_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('enabled_flag', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('trace_id', mysql.VARCHAR(charset='utf8', length=255), nullable=True, comment='trace_id'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_table('api_test_report_detail_0',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('case_id', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('success', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('status', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('step_id', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('parent_step_id', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('step_type', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('message', mysql.TEXT(), nullable=True),
    sa.Column('env_variables', mysql.JSON(), nullable=True),
    sa.Column('variables', mysql.JSON(), nullable=True),
    sa.Column('case_variables', mysql.JSON(), nullable=True),
    sa.Column('session_data', mysql.JSON(), nullable=True),
    sa.Column('export_vars', mysql.JSON(), nullable=True),
    sa.Column('report_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('start_time', mysql.DATETIME(), nullable=True),
    sa.Column('creation_date', mysql.DATETIME(), nullable=True),
    sa.Column('created_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('updation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updated_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('enabled_flag', mysql.INTEGER(display_width=11), server_default=sa.text("'1'"), autoincrement=False, nullable=True, comment='是否删除, 0 删除 1 非删除'),
    sa.Column('duration', mysql.DECIMAL(precision=10, scale=3), nullable=True, comment='运行耗时'),
    sa.Column('step_tag', mysql.VARCHAR(length=255), nullable=True, comment='pre 前置，post 后置，controller 控制器'),
    sa.Column('pre_hook_data', mysql.JSON(), nullable=True),
    sa.Column('post_hook_data', mysql.JSON(), nullable=True),
    sa.Column('setup_hook_results', mysql.JSON(), nullable=True, comment='前置hook结果'),
    sa.Column('teardown_hook_results', mysql.JSON(), nullable=True, comment='后置hook结果'),
    sa.Column('index', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('status_code', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('response_time_ms', mysql.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('elapsed_ms', mysql.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('log', mysql.LONGTEXT(), nullable=True),
    sa.Column('url', mysql.VARCHAR(length=500), nullable=True),
    sa.Column('method', mysql.VARCHAR(length=255), nullable=True),
    sa.Column('trace_id', mysql.VARCHAR(length=255), nullable=True, comment='trace_id'),
    sa.Column('exec_user_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('exec_user_name', mysql.VARCHAR(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_table('celery_periodic_task_changed',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('last_update', mysql.DATETIME(), nullable=False),
    sa.Column('trace_id', mysql.VARCHAR(charset='utf8', length=255), nullable=True, comment='trace_id'),
    sa.Column('creation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updation_date', mysql.DATETIME(), nullable=True),
    sa.Column('updated_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('created_by', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('enabled_flag', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.drop_index(op.f('ix_ui_steps_index'), table_name='ui_steps')
    op.drop_table('ui_steps')
    op.drop_index(op.f('ix_ui_reports_name'), table_name='ui_reports')
    op.drop_index(op.f('ix_ui_reports_case_id'), table_name='ui_reports')
    op.drop_table('ui_reports')
    op.drop_index(op.f('ix_ui_page_name'), table_name='ui_page')
    op.drop_table('ui_page')
    op.drop_index(op.f('ix_ui_element_page_id'), table_name='ui_element')
    op.drop_index(op.f('ix_ui_element_name'), table_name='ui_element')
    op.drop_table('ui_element')
    op.drop_index(op.f('ix_ui_case_name'), table_name='ui_case')
    op.drop_table('ui_case')
    # ### end Alembic commands ###
